@page "/"
@inject IRESTConuntriesServiceV2 restCountries

<section class="filter-section">
    <input class="element-shadow" type="search" placeholder="Search for a country..." />
    <select class="element-shadow" title="Filter by region">
        <option value="" disabled selected hidden>Filet by region</option>
        @foreach (var regoin in regions)
        {
            <option value="@regoin">@regoin</option>
        }
    </select>
</section>

<section class="countries-section">
    @*<Virtualize Items="@countriesList" Context="country">
        <article class="countries-section__card">
            <img class="countries-section__card-flag" src="@country.flag" alt="@country.demonym flag">
            <div class="countries-section__card-info">
                <h2>@country.name</h2>
                <p><b>Population:</b> @country.population</p>
                <p><b>Region:</b> @country.region</p>
                <p><b>Capital:</b> @country.capital</p>
            </div>
        </article>
    </Virtualize>*@

    @foreach (var country in countriesList)
    {
        <article class="countries-section__card element-shadow">
            <img class="countries-section__card-flag" src="@country.flags.png" alt="@country.demonym flag">
            <div class="countries-section__card-info">
                <h2>@country.name</h2>
                <p><b>Population:</b> @country.population</p>
                <p><b>Region:</b> @country.region</p>
                <p><b>Capital:</b> @country.capital</p>
            </div>
        </article>
    }
</section>


@code {

    List<CountreyV2> countriesList = new();
    List<string> regions = new();

    protected override async Task OnInitializedAsync()
    {
        countriesList = await restCountries.GetAllCountries();
        GetRegions();
    }

    private void GetRegions()
    {
        regions = countriesList.Select(country => country.region).Distinct().ToList();
    }
}